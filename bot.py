
import os
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
OPENAI_BASE_URL = os.getenv("OPENAI_BASE_URL")

client = OpenAI(api_key=OPENAI_API_KEY, base_url=OPENAI_BASE_URL)

MAX_LENGTH = 3800

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ¬´–ê–∫—Ç—ë—Ä—Å–∫—É—é —Å–µ—Å—Å–∏—é¬ª! –Ø ‚Äî –ú–∏—Å—Å –ú–∏–Ω—É—Ç–∫–∞ üí´ –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    if not user_message:
        return

    # –ü—Ä–æ—Å—Ç–æ–π —Ñ–∏–ª—å—Ç—Ä –Ω–∞ —Ç–µ–º—ã –≤–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    forbidden_topics = ["–∫–æ—à–∫–∞", "—Å–æ–±–∞–∫–∞,

 "–±—É—Ç–µ—Ä–±—Ä–æ–¥", "—Å–µ–º—å—è", "–ø–æ–≥–æ–¥–∞", "–≤–æ–π–Ω–∞", "–ª—é–±–æ–≤—å"]
    if any(topic in user_message.lower() for topic in forbidden_topics):
        await update.message.reply_text("üß≠ –Ø –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ —Ç–µ–º–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ–µ–∫—Ç–æ–º ¬´–ê–∫—Ç—ë—Ä—Å–∫–∞—è —Å–µ—Å—Å–∏—è¬ª: —É—Ä–æ–∫–∏, –ø—Ä–∞–∫—Ç–∏–∫–∞, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ –≥–æ–ª–æ—Å. –û–±–æ –≤—Å—ë–º —ç—Ç–æ–º ‚Äî —Å —Ä–∞–¥–æ—Å—Ç—å—é!")
        return

    try:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "user", "content": user_message}],
            max_tokens=1500,
            temperature=0.7
        )
        full_reply = response.choices[0].message.content.strip()
        for chunk in [full_reply[i:i+MAX_LENGTH] for i in range(0, len(full_reply), MAX_LENGTH)]:
            await update.message.reply_text(chunk)
    except Exception as e:
        logger.error(f"GPT error: {e}")
        await update.message.reply_text("‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ —á—É—Ç—å –ø–æ–∑–∂–µ.")

def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()

if __name__ == "__main__":
    main()
